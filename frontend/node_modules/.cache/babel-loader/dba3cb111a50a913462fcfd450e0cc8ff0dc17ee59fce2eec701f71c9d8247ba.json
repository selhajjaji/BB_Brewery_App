{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\m\\\\BB_Brewery_App\\\\frontend\\\\src\\\\components\\\\UpdateProduct.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UpdateProduct = () => {\n  _s();\n  const [productId, setProductId] = useState(\"\");\n  const [newDescription, setNewDescription] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  const handleUpdate = async () => {\n    try {\n      const response = await axios.post(\"http://localhost:5000/update-product\", {\n        product_id: productId,\n        new_description: newDescription\n      });\n      setMessage(response.data.message);\n    } catch (error) {\n      setMessage(\"Error updating product description\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Update Product Description\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Product ID\",\n      value: productId,\n      onChange: e => setProductId(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"New Description\",\n      value: newDescription,\n      onChange: e => setNewDescription(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleUpdate,\n      children: \"Update\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n_s(UpdateProduct, \"y4ccbPbZeKuoi+bjQ0spDep24F0=\");\n_c = UpdateProduct;\nexport default UpdateProduct;\nvar _c;\n$RefreshReg$(_c, \"UpdateProduct\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","UpdateProduct","_s","productId","setProductId","newDescription","setNewDescription","message","setMessage","handleUpdate","response","post","product_id","new_description","data","error","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["C:/Users/m/BB_Brewery_App/frontend/src/components/UpdateProduct.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst UpdateProduct = () => {\r\n  const [productId, setProductId] = useState(\"\");\r\n  const [newDescription, setNewDescription] = useState(\"\");\r\n  const [message, setMessage] = useState(\"\");\r\n\r\n  const handleUpdate = async () => {\r\n    try {\r\n      const response = await axios.post(\"http://localhost:5000/update-product\", {\r\n        product_id: productId,\r\n        new_description: newDescription,\r\n      });\r\n      setMessage(response.data.message);\r\n    } catch (error) {\r\n      setMessage(\"Error updating product description\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Update Product Description</h2>\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Product ID\"\r\n        value={productId}\r\n        onChange={(e) => setProductId(e.target.value)}\r\n      />\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"New Description\"\r\n        value={newDescription}\r\n        onChange={(e) => setNewDescription(e.target.value)}\r\n      />\r\n      <button onClick={handleUpdate}>Update</button>\r\n      <p>{message}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UpdateProduct;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACQ,cAAc,EAAEC,iBAAiB,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACxD,MAAM,CAACU,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAE1C,MAAMY,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC/B,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMZ,KAAK,CAACa,IAAI,CAAC,sCAAsC,EAAE;QACxEC,UAAU,EAAET,SAAS;QACrBU,eAAe,EAAER;MACnB,CAAC,CAAC;MACFG,UAAU,CAACE,QAAQ,CAACI,IAAI,CAACP,OAAO,CAAC;IACnC,CAAC,CAAC,OAAOQ,KAAK,EAAE;MACdP,UAAU,CAAC,oCAAoC,CAAC;IAClD;EACF,CAAC;EAED,oBACER,OAAA;IAAAgB,QAAA,gBACEhB,OAAA;MAAAgB,QAAA,EAAI;IAA0B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACnCpB,OAAA;MACEqB,IAAI,EAAC,MAAM;MACXC,WAAW,EAAC,YAAY;MACxBC,KAAK,EAAEpB,SAAU;MACjBqB,QAAQ,EAAGC,CAAC,IAAKrB,YAAY,CAACqB,CAAC,CAACC,MAAM,CAACH,KAAK;IAAE;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC/C,CAAC,eACFpB,OAAA;MACEqB,IAAI,EAAC,MAAM;MACXC,WAAW,EAAC,iBAAiB;MAC7BC,KAAK,EAAElB,cAAe;MACtBmB,QAAQ,EAAGC,CAAC,IAAKnB,iBAAiB,CAACmB,CAAC,CAACC,MAAM,CAACH,KAAK;IAAE;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpD,CAAC,eACFpB,OAAA;MAAQ2B,OAAO,EAAElB,YAAa;MAAAO,QAAA,EAAC;IAAM;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAC9CpB,OAAA;MAAAgB,QAAA,EAAIT;IAAO;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACb,CAAC;AAEV,CAAC;AAAClB,EAAA,CApCID,aAAa;AAAA2B,EAAA,GAAb3B,aAAa;AAsCnB,eAAeA,aAAa;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}